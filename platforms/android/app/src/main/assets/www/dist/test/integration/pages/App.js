sap.ui.require(["sap/ui/test/Opa5","sap/ui/test/matchers/AggregationLengthEquals","sap/ui/test/matchers/PropertyStrictEquals","sap/ui/test/matchers/Properties","sap/ui/test/actions/EnterText","sap/ui/test/actions/Press"],function(e,t,s,n,r,i){"use strict";var a="sap.ui.demo.todo.view.App";var o="addTodoItemInput";var c="searchTodoItemsInput";var u="todoList";var m="clearCompleted";var h="itemsLeftLabel";e.createPageObjects({onTheAppPage:{actions:{iEnterTextForNewItemAndPressEnter:function(e){return this.waitFor({id:o,viewName:a,actions:[new r({text:e})],errorMessage:"The text cannot be entered"})},iEnterTextForSearchAndPressEnter:function(e){return this.waitFor({id:c,viewName:a,actions:[new r({text:e})],errorMessage:"The text cannot be entered"})},iSelectTheLastItem:function(e){return this.waitFor({id:u,viewName:a,actions:[function(t){var s=t.getItems().length;var n=t.getItems()[s-1];this._triggerCheckboxSelection(n,e)}.bind(this)],errorMessage:"Last checkbox cannot be pressed"})},iSelectAllItems:function(e){return this.waitFor({id:u,viewName:a,actions:[function(t){t.getItems().forEach(function(t){this._triggerCheckboxSelection(t,e)}.bind(this))}.bind(this)],errorMessage:"checkbox cannot be pressed"})},_triggerCheckboxSelection:function(e,t){if(e.getSelected()&&!t||!e.getSelected()&&t){var s=new i;s.controlAdapters["sap.m.CustomListItem"]="selectMulti-CB";s.executeOn(e)}},iClearTheCompletedItems:function(){return this.waitFor({id:m,viewName:a,actions:[new i],errorMessage:"checkbox cannot be pressed"})},iFilterForItems:function(e){return this.waitFor({viewName:a,controlType:"sap.m.SegmentedButtonItem",matchers:[new n({key:e})],actions:[new i],errorMessage:"SegmentedButton can not be pressed"})}},assertions:{iShouldSeeTheItemBeingAdded:function(n,r){return this.waitFor({id:u,viewName:a,matchers:[new t({name:"items",length:n}),function(e){var t=e.getItems().length;var n=e.getItems()[t-1].getContent()[0];return new s({name:"value",value:r}).isMatching(n)}],success:function(){e.assert.ok(true,"The table has "+n+" item(s), with '"+r+"' as last item")},errorMessage:"List does not have expected entry '"+r+"'."})},iShouldSeeTheLastItemBeingCompleted:function(t){return this.waitFor({id:u,viewName:a,matchers:[function(e){var s=e.getItems().length;var n=e.getItems()[s-1].getContent()[0];return t&&!n.getEnabled()||!t&&n.getEnabled()}],success:function(){e.assert.ok(true,"The last item is marked as completed")},errorMessage:"The last item is not disabled."})},iShouldSeeAllButOneItemBeingRemoved:function(n){return this.waitFor({id:u,viewName:a,matchers:[new t({name:"items",length:1}),function(e){var t=e.getItems()[0].getContent()[0];return new s({name:"value",value:n}).isMatching(t)}],success:function(){e.assert.ok(true,"The table has 1 item, with '"+n+"' as Last item")},errorMessage:"List does not have expected entry '"+n+"'."})},iShouldSeeItemLeftCount:function(t){return this.waitFor({id:h,viewName:a,matchers:[new s({name:"text",value:t+(t===1?" item left":" items left")})],success:function(){e.assert.ok(true,""+t+" items left")},errorMessage:"Items are not selected."})},iShouldSeeItemCount:function(s){return this.waitFor({id:u,viewName:a,matchers:[new t({name:"items",length:s})],success:function(){e.assert.ok(true,"The table has "+s+" item(s)")},errorMessage:"List does not have expected number of items '"+s+"'."})}}}})});